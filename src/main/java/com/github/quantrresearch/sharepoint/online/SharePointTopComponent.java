// License : Apache License Version 2.0  https://www.apache.org/licenses/LICENSE-2.0
package com.github.quantrresearch.sharepoint.online;

import com.peterswing.CommonLib;
import hk.quantr.sharepoint.SPOnline;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import org.apache.commons.lang3.tuple.Pair;
import org.json.JSONObject;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
		dtd = "-//com.github.quantrresearch.sharepoint.online//SharePoint//EN",
		autostore = false
)
@TopComponent.Description(
		preferredID = "SharePointTopComponent",
		iconBase = "com/github/quantrresearch/sharepoint/online/sharepoint icon.png",
		persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "explorer", openAtStartup = false)
@ActionID(category = "Window", id = "com.github.quantrresearch.sharepoint.online.SharePointTopComponent")
@ActionReference(path = "Menu/Window/SharePoint" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
		displayName = "#CTL_SharePointAction",
		preferredID = "SharePointTopComponent"
)
@Messages({
	"CTL_SharePointAction=SharePoint",
	"CTL_SharePointTopComponent=SharePoint Window",
	"HINT_SharePointTopComponent=This is a SharePoint window"
})
public final class SharePointTopComponent extends TopComponent {

	AntlrTreeNode rootNode = new AntlrTreeNode("Grammar", "Grammar");
	AntlrTreeModel treeModel = new AntlrTreeModel(rootNode);

	public SharePointTopComponent() {
		initComponents();
		setName(Bundle.CTL_SharePointTopComponent());
		setToolTipText(Bundle.HINT_SharePointTopComponent());

		initTree();
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();

        setLayout(new java.awt.BorderLayout());

        jScrollPane1.setViewportView(tree);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree tree;
    // End of variables declaration//GEN-END:variables
	@Override
	public void componentOpened() {
		// TODO add custom code on component opening
	}

	@Override
	public void componentClosed() {
		// TODO add custom code on component closing
	}

	void writeProperties(java.util.Properties p) {
		// better to version settings since initial version as advocated at
		// http://wiki.apidesign.org/wiki/PropertyFiles
		p.setProperty("version", "1.0");
		// TODO store your settings
	}

	void readProperties(java.util.Properties p) {
		String version = p.getProperty("version");
		// TODO read your settings according to their version
	}

	private void initTree() {
		tree.setModel(treeModel);
		tree.setCellRenderer(new AntlrTreeRenderer());
		tree.setShowsRootHandles(true);

		JPasswordField pwd = new JPasswordField(10);
		int action = JOptionPane.showConfirmDialog(null, pwd, "Please input office365 password", JOptionPane.OK_CANCEL_OPTION);
		String password = new String(pwd.getPassword());
		String domain = "quantr";
		Pair<String, String> token = SPOnline.login("peter@quantr.hk", password, domain);
		if (token != null) {
			String jsonString = SPOnline.post(token, domain, "/_api/contextinfo", null, null);
			System.out.println(CommonLib.prettyFormatJson(jsonString));
			JSONObject json = new JSONObject(jsonString);
			String formDigestValue = json.getJSONObject("d").getJSONObject("GetContextWebInformation").getString("FormDigestValue");
			System.out.println("FormDigestValue=" + formDigestValue);

			jsonString = SPOnline.get(token, domain, "/_api/web");
			if (jsonString != null) {
				System.out.println(CommonLib.prettyFormatJson(jsonString));
			}

		}
	}
}
